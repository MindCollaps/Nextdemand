# ansible-galaxy collection install -r requirements.yml
# ansible-galaxy collection install ansible.posix
# ansible-galaxy collection install community.general
# ansible-galaxy collection install community.docker
# ansible-galaxy collection install kubernetes.core
# ansible-playbook -i inv install.yml
# inv: 
# [controller]
# server1 ansible_host=server ansible_ssh_private_key_file=/path.pem ansible_user=root

- name: Set AllowTcpForwarding in sshd_config
  hosts: all
  become: yes
  tasks:
    - name: Comment out AllowTcpForwarding
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^AllowTcpForwarding no'
        line: '#AllowTcpForwarding yes'

    - name: Restart sshd
      service:
        name: sshd
        state: restarted


- name: Update apt and install necessary packages
  hosts: all
  become: yes
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name: "{{ item }}"
        state: present
      loop:
        - ufw
        - curl
        - python3
        - python3-pip
        - git
        - docker.io

    - name: Install helm if not exists
      unarchive:
        src: https://get.helm.sh/helm-v3.14.4-linux-amd64.tar.gz
        dest: /usr/local/bin
        extra_opts: "--strip-components=1"
        owner: root
        group: root
        mode: 0755
        remote_src: true
      args:
        creates: /usr/local/bin/helm

    - name: Setup UFW
      community.general.ufw:
        rule: allow
        port: "{{ item }}"
        proto: tcp
        state: enabled
      loop:
        - 22
        - 80
        - 443

- name: Setup Kubernetes Cluster
  hosts: all
  become: yes
  tasks:
    # https://docs.k3s.io/helm#customizing-packaged-components-with-helmchartconfig
    - name: Copy Traefik values config file to the remote host
      copy:
        src: kubernetes/traefik-config.yml
        dest: /var/lib/rancher/k3s/server/manifests/traefik-config.yaml

    # k8s doesnt know HelmChartConfig, so we need to apply the config manually
    - name: Apply Traefik values config
      shell : kubectl apply -f /var/lib/rancher/k3s/server/manifests/traefik-config.yaml

    - name: Run k3s installation script
      shell: curl -sfL https://get.k3s.io | sh -

    - name: Install kubernetes Python package with --break-system-packages
      pip:
        name: "{{ item }}"
        state: present
        extra_args: "--break-system-packages"
      loop:
        - kubernetes
        - openshift
        - PyYAML
    
    - name: Add Nextcloud Helm repository
      kubernetes.core.helm_repository:
        name: nextcloud
        repo_url: https://nextcloud.github.io/helm/
        state: present

- name: Setup Traefik
  hosts: all
  become: yes
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tasks:
    - name: Copy Cloudflare credentials to the remote host
      copy:
        src: kubernetes/secrets/cloudflare-credentials.yml
        dest: /tmp/cloudflare-credentials.yml
        mode: 0644
        owner: "{{ ansible_user }}"

    - name: Create Cloudflare credentials secret
      kubernetes.core.k8s:
        apply: yes
        src: /tmp/cloudflare-credentials.yml

- name: Setup Webserver
  hosts: all
  become: yes
  environment:
    KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tasks:
    - name: Clone NextDemand repository
      git:
        repo: https://github.com/MindCollaps/NextDemand
        dest: /tmp/NextDemand

    - name: Build NextDemand Docker image
      docker_image:
        tag: nextdemand
        name: nextdemand
        source: build
        archive_path: /tmp/nextdemand.tar
        build:
          pull: yes
          path: /tmp/NextDemand

    - name: Import Docker image to k3s
      command: k3s ctr images import /tmp/nextdemand.tar

    - name: Create namespace for nextdemand
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Namespace
          metadata:
            name: nextdemand

    - name: Apply Webserver yaml
      kubernetes.core.k8s:
        state: present
        apply: yes
        src: /tmp/NextDemand/kubernetes/webserver.yml

    - name: Stop k3s
      service:
        name: "{{ item }}"
        state: stopped
      loop:
        - k3s

    - name: Start k3s
      service:
        name: "{{ item }}"
        state: started
      loop:
        - k3s